[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pptrans"
version = "0.1.0"
description = "Translate PowerPoint presentations"
authors = [{name = "Antti Kaihola"}]
readme = "README.rst"
requires-python = ">=3.9"
dependencies = [
    "click",
    "python-pptx",
    "llm",
]

[project.optional-dependencies]
anthropic = ["llm-anthropic"]
gemini = ["llm-gemini>=0.24"]

[project.scripts]
pptrans = "pptrans.__main__:main"

[dependency-groups]
dev = [
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-kwparametrize",
    "pytest-mock",
]

[project.urls]
Home = "https://github.com/akaihola/pptrans"

[tool.isort]
profile = "black"

[tool.darker]
src = [
    "src",
]
revision = "master..."
isort = true

[tool.graylint]
src = [
    "src",
]
revision = "master..."
lint = [
    "mypy",
    "pydocstyle",
    "ruff check --fix",
]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Trailing comma missing
    "D203",  # One blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period (duplicates D415)
    "ERA001",  # Found commented-out code
]
# Keep only these auto-fixing options
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "ANN204",  # Missing return type annotation for special method `__init__`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "ARG001",  # Unused argument
    "C901",  # function is too complex (N > 10)
    "FBT001",  # Boolean-typed positional argument in function definition
    "FBT002",  # Boolean default positional argument in function definition
    "INP001",  # File is part of an implicit namespace package. Add an `__init__.py`.
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
    "D103",  # Missing docstring in public function
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in `__init__`
    "N803",  # Argument name should be lowercase
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    # Magic value used in comparison, consider replacing with a constant variable:
    "PLR2004",
    # Fixture without value is injected as parameter, use `@pytest.mark.usefixtures`
    # instead:
    "PT019",
    "S101",  # Use of `assert` detected
]

[tool.pyright]
reportImplicitStringConcatenation = "none"
reportUnusedCallResult = "none"
reportExplicitAny = "none"

[[tool.pyright.executionEnvironments]]
root = "tests"
reportPrivateUsage = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportAny = "none"
reportUnknownParameterType = "none"
reportMissingParameterType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnusedParameter = "none"
reportFunctionMemberAccess = "none"
